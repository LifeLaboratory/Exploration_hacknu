{"remainingRequest":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lalow_/Desktop/git/Exploration_hacknu/front/src/views/Search.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/src/views/Search.vue","mtime":1616319592532},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lalow_/Desktop/git/Exploration_hacknu/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgICBmb250LWZhbWlseTogIkF2ZW5pciIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"GameCards\">\n        <GameCardsStack :data=\"userList\" v-if=\"userList.length > 3\" @selectPair=\"getNewPair\" />\n        <div v-else>\n            Пользователей больше нет\n        </div>\n    </div>\n</template>\n<script>\nimport GameCardsStack from \"../components/Card/GameCardsStack\";\nimport aituBridge from '@btsd/aitu-bridge'\nimport axios from 'axios'\nimport {ip} from '@/cfg/setting.js'\nexport default {\n    name: \"App\",\n    components: {\n        GameCardsStack\n    },\n\n    data() {\n        return {\n            can: false,\n            visibleCards: [\n            {\n                id: 1,\n                photo: '',\n                name: 'Roman',\n                age: 20,\n                interess: 'swinger'\n            },\n            {\n                id: 2,\n                photo: '',\n                name: 'Roman',\n                age: 20,\n                interess: 'swinger'\n            },\n            {\n                id: 3,\n                photo: '',\n                name: 'Roman',\n                age: 20,\n                interess: 'swinger'\n            },\n            {\n                id: 4,\n                photo: '',\n                name: 'Roman',\n                age: 20,\n                interess: 'swinger'\n            }\n            ],\n            userList: [],\n            data: {}\n        }\n    },\n    async mounted () {\n        let d = await axios.get(`${ip}/user/get_next_user`,\n        {\n          headers: {\n            'session': localStorage.getItem('id')\n          }\n        })\n        this.userList = d.data\n\n\n    },\n    methods: {\n        async getNewPair(data) {\n            let d = await axios.post(`${ip}/user/swipe`,\n            {\n                id_second: data.item.id,\n                status: data.type\n            },\n            {\n            headers: {\n                'session': localStorage.getItem('id')\n            }\n            })\n            \n            this.userList.push(d.data)\n            if (d.data.status === 'meeting') {\n                aituBridge.vibrate([1000]);\n                this.$buefy.dialog.confirm({\n                    title: 'Новая пара !',\n                    message: 'У вас появилось 1 совпадение, посетите страницу пар для этого',\n                    confirmText: 'Просмотреть',\n                    type: 'is-danger',\n                    hasIcon: false,\n                    onConfirm: () => this.$router.push({path: '/me/map'})\n                })\n            }\n        },\n        handleCardAccepted() {\n            console.log(\"handleCardAccepted\");\n        },\n        handleCardRejected() {\n            console.log(\"handleCardRejected\");\n        },\n        handleCardSkipped() {\n            console.log(\"handleCardSkipped\");\n        },\n        removeCardFromDeck() {\n            this.visibleCards.shift();\n        }\n    }\n};\n</script>\n\n\n<style lang=\"scss\">\n    #app {\n        font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n        text-align: center;\n    }\n</style>"]}]}